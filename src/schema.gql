# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

directive @private on OBJECT | FIELD_DEFINITION

type Account implements Node {
  id: Binary!
  firstname: String!
  lastname: String!
  emailAddress: EmailAddress!
  createdAt: DateTime!
  updatedAt: DateTime!
}

interface Node {
  id: Binary!
}

"""A simple Binary parser"""
scalar Binary

"""
A field whose value conforms to the standard internet email address format as specified in HTML Spec: https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address.
"""
scalar EmailAddress @specifiedBy(url: "https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address")

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Product implements Node {
  id: Binary!
  name: String!
  description: String!
  owner: Account!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type Authentication {
  token: String!
}

type Query {
  getHello: String!
  me: Account!
  product(id: Int!): Product!
  authentication(id: Int!): Authentication!
}

type Mutation {
  signUp(input: SignUpInput!): Authentication!
  authenticate(input: AuthenticateInput!): Authentication!
  createProduct(createProductInput: CreateProductInput!): Product!
  updateProduct(updateProductInput: UpdateProductInput!): Product!
  deleteProduct(DeleteProductInput: DeleteProductInput!): Product!
  createAuthentication(createAuthenticationInput: CreateAuthenticationInput!): Authentication!
  updateAuthentication(updateAuthenticationInput: UpdateAuthenticationInput!): Authentication!
  removeAuthentication(id: Int!): Authentication!
}

input SignUpInput {
  emailAddress: EmailAddress!
  firstname: String!
  lastname: String!
  password: String!
}

input AuthenticateInput {
  emailAddress: EmailAddress!
  password: String!
}

input CreateProductInput {
  name: String!
  description: String!
}

input UpdateProductInput {
  id: Binary!
  body: UpdateProductBody!
}

input UpdateProductBody {
  name: String!
  description: String!
}

input DeleteProductInput {
  id: Binary!
}

input CreateAuthenticationInput {
  """Example field (placeholder)"""
  exampleField: Int!
}

input UpdateAuthenticationInput {
  """Example field (placeholder)"""
  exampleField: Int
  id: Int!
}